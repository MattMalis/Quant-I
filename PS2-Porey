#Hmk 2
#Ex 1
# lets first simulate a bivariate normal sample
#MASS IS A COOL LIBRARY OF THINGS DONE IN RIPLEY'S MODERN APPLIED
#STARTITICS WITH (R AND)S
rm(list=ls())
library(MASS)
install.packages("Matrix")
library(Matrix)
#This draws a bivariate normal (here 5000 (10,000 numbers divided by
#2 obs, leave mu at zero, leave the first and fourth terms of Sigma,
#change second and third (off diagonal), keeping symmetric, and if you
#make bigger than 1 or less than -1 your will get an error that your
#Sigma is not positive definite, leave 1000 and 2 args alone
bivn <- mvrnorm(10000, mu = c(0, 0), Sigma = matrix(c(1, 0, 0, 1), 2))

# now we do a kernel density estimate
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 50)
# now plot your results
#First do contour then do 3d (perspecitve plot, args of persp are the
#viewing angle)
contour(bivn.kde)
persp(bivn.kde, phi = 45, theta = 30)
#repeat by changing bivn <- mvrnorm(10000, mu = c(0, 0), Sigma = matrix(c(1, 0, 0, 1), 2)) 
#to bivn <- mvrnorm(10000, mu = c(0, 0), Sigma = matrix(c(1, 1, 1, 1), 2))
#or to bivn <- mvrnorm(10000, mu = c(0, 0), Sigma = matrix(c(1, -1, -1, 1), 2))
#Ex 2
#Bernoulli 1 coin
rbinom10reps1flip <-0
for(i in 1:1000) {
  rbinom10reps1flip[i] <- sum(rbinom(10,1,0.5))/10
  print(rbinom10reps1flip)
}
rbinom30reps1flip<-0
for(i in 1:1000) {
  rbinom30reps1flip[i] <- sum(rbinom(30,1,0.5))/30
  print(rbinom30reps1flip)
}
rbinom100reps1flip<-0
for(i in 1:1000) {
  rbinom100reps1flip[i] <- sum(rbinom(100,1,0.5))/100
  print(rbinom100reps1flip)
}
rbinom1000reps1flip<-0
for(i in 1:1000) {
  rbinom1000reps1flip[i] <- sum(rbinom(1000,1,0.5))/1000
  print(rbinom1000reps1flip)
}

#binomial 5 flips
rbinom10reps5flip<-0
for(i in 1:1000) {
  rbinom10reps5flip[i] <- sum(rbinom(10,5,0.5))/10
  print(rbinom10reps5flip)
}

rbinom30reps5flip<-0
for(i in 1:1000) {
  rbinom30reps5flip[i] <- sum(rbinom(30,5,0.5))/30
  print(rbinom30reps5flip)
}
rbinom100reps5flip<-0
for(i in 1:1000) {
  rbinom100reps5flip[i] <- sum(rbinom(100,5,0.5))/100
  print(rbinom100reps5flip)
}
rbinom1000reps5flip<-0
for(i in 1:1000) {
  rbinom1000reps5flip[i] <- sum(rbinom(1000,5,0.5))/1000
  print(rbinom1000reps5flip)
}

#Cauchy 
rcauchy10 <-0
for(i in 1:1000) {
  rcauchy10[i] <- sum(rcauchy(10))/10
  print(rcauchy10)
}
rcauchy30 <-0
for(i in 1:1000) {
  rcauchy30[i] <- sum(rcauchy(30))/30
  print(rcauchy30)
}
rcauchy100 <-0
for(i in 1:1000) {
    rcauchy100[i] <- sum(rcauchy(100))/100
    print(rcauchy100)
}
rcauchy1000 <-0
for(i in 1:1000) {
  rcauchy1000[i] <- sum(rcauchy(1000))/1000
  print(rcauchy1000)
}
#display kernel diagrams/hist
par(mfrow=c(2,2))
plot(density(rbinom10reps1flip))
plot(density(rbinom30reps1flip))
plot(density(rbinom100reps1flip))
plot(density(rbinom1000reps1flip))
par(mfrow=c(2,2))
plot(density(rbinom10reps5flip))
plot(density(rbinom30reps5flip))
plot(density(rbinom100reps5flip))
plot(density(rbinom1000reps5flip))
par(mfrow=c(2,2))
plot(density(rcauchy10))
plot(density(rcauchy30))
plot(density(rcauchy100))
plot(density(rcauchy1000))


#Ex 3
#a between 0,10,...100
rm(list=ls())
a<-0
matrix <- matrix(c(1,0,a,1), ncol=2)
for(a in seq(0,100, by=10)) {
  matrix[1,2] <- a
  print(solve(matrix))
}
#a at 10000
matrix <- matrix(c(1,0,a,1), ncol=2)
for(a in 10000) {
  matrix[1,2] <- a
  print(solve(matrix))
}
#a at 100000
matrix <- matrix(c(1,0,a,1), ncol=2)
for(a in 100000) {
  matrix[1,2] <- a
  print(solve(matrix))
}

Ex.4
rm(list=ls())
#a.inverse of 2x2 (1,2,3,1)
solve(matrix(c(1,2,3,1), nrow=2, ncol=2))
#b.inverse of 2x2 (1,2,-1,-2)
solve(matrix(c(1,2,-1,-2), nrow=2, ncol=2))
#c.MxN
M<-matrix(c(1,2,2,1,1,0), nrow=3, ncol=2)
N<-matrix(c(0,2,1,3,1,4), nrow=2, ncol=3)
M%*%N
v=matrix(c,12)

#f
v<-c(1,2)
A<-matrix(c(1,2,0,1), nrow=2, ncol=2)
t(v)%*%A%*%v

#g
B<-rankMatrix(matrix(c(1,2,3,1,0,0,0,1,0), nrow=3, ncol=3))
B
C<-solve(matrix(c(1,2,3,1,0,0,0,1,0), nrow=3, ncol=3))
C
D<-solve(C)
D
D%*%C
